/* Global */ 
* {
    padding: 0;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    cursor: default;
    color: var(--black);
    scroll-behavior: smooth;
}

::-webkit-scrollbar {
  width: 0;
}

:root {
    --primary: #14213D;
    --primaryTransparent: #14213d94;
    --second: #FCA311;
    --secondTransparent: rgba(253, 163, 18, 0.5);
    --background: #E5E5E5;
    --backgroundTransparent: #e5e5e569;
    --nobackground: #141414;
    --white: #FFFFFF;
    --black: #000000;
    --black2: #0e0f11;
    --red: #c22828;
    --gray: #c5c5c5;
    --logoSrc: url(../assets/igest/img/lightNotFound.png);
}

.dark:root {
  --primary: #203869;
  --red: #d33d3d;
  --gray: #636363;
  --second: #ffb703;
  --secondTransparent: hsla(43, 100%, 70%, 0.76);
  --background: #141414; 
  --backgroundTransparent: #14141469; 
  --nobackground: #E5E5E5;
  --logoSrc: url(../assets/igest/img/darkNotFound.png);
}

.container {
  width: 100vw;
  height: 100vh;
  display: grid;
  align-items: center;
  justify-content: center;
  background: url(../assets/tela1000.jpg);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  z-index: 0;
  overflow: hidden auto;
}

.container::before {
  position: absolute;
  content: '';
  top: 70px;
  left: 0;
  width: 100vw;
  height: calc(100vh - 70px);
  background: rgba(0, 0, 0, 0.473);
  backdrop-filter: sepia(30%);
  z-index: 0;
}

/* Select personalizado */
.select {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  display: grid;
  align-items: center;
  justify-content: left;

  input {
    width: 0 !important;
    height: 0 !important;
    background: none !important;
    padding: 0 !important;
  }

  h2 {
    position: absolute;
    font-size: 1rem;
    cursor: pointer;
  }

  .options {
    position: absolute;
    width: 200px;
    height: 100px;
    max-width: 200px;
    max-height: 100px;
    overflow: hidden auto;
    bottom: -100px;
    background: var(--nobackground);
    border-radius: 10px;
    box-shadow: 0 0 10px #0003;
    display: grid;
    align-items: center;
    justify-content: center;
    text-align: left;

    .option {
      width: 200px;
      height: 20px;
      padding: 20px 0 20px;
      text-align: center;
      cursor: pointer;
      color: var(--background);
    }

    .option:hover {
      background: var(--secondTransparent);
    }
  }
}
.select:hover {
  h2 {
    opacity: .8;
  }
}

/* Buttons */
button {
  background: var(--primary);
  border: none;
  border-radius: 10px;
  color: var(--white);
  font-size: 1rem;
  outline: none;
  padding: 10px;
  transition: .3s;
  cursor: pointer;

  svg {
    cursor: pointer;
    fill: var(--white);

    path {
      cursor: pointer;
    }
  }
}

button:hover {
  background: var(--black);
  opacity: 9;
}

button:disabled {
  cursor: not-allowed;
  opacity: .7;

  svg {
    cursor: not-allowed;

    path {
      cursor: not-allowed;
    }
  }
}

button:disabled:hover {
  background: var(--primary);
  opacity: .7;
}

button.link {
  background: transparent;
  padding: 5px;
  font-size: .8rem;
  cursor: pointer;
  margin: 5px;
  a {
      text-decoration: none;
      color: var(--primary);
      cursor: pointer;
  }
}

button.link:hover {
  opacity: .9;

  a {
      color: var(--black);
  }
}

button.primary {
  width: 120px;
}

button.second {
  background: transparent;
  border: 1px solid var(--primary);
  color: var(--primary);
}

button.second:hover {
  background: var(--black);
  border: 1px solid var(--black);
  color: var(--white);
}

fieldset.links, fieldset.buttons {
  border: none;
  display: flex;
  gap: 10px;
}

/* Checkbox */
.checkbox-container {
  display: inline-block;
  position: relative;
  padding-left: 35px;
  margin: -10px 0 12px;
  cursor: pointer;
  font-size: 16px;
  user-select: none;
  cursor: pointer;
}

.custom-checkbox {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
  cursor: pointer;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 4px;
  transition: background-color 0.3s;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  cursor: pointer;
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.custom-checkbox:checked ~ .checkmark {
  background-color: #2196F3;
  box-shadow: 0 3px 7px rgba(33, 150, 243, 0.3);
  cursor: pointer;
}

.custom-checkbox:checked ~ .checkmark:after {
  display: block;
}

@keyframes checkAnim {
  0% {
    height: 0;
  }

  100% {
    height: 10px;
  }
}

.custom-checkbox:checked ~ .checkmark:after {
  animation: checkAnim 0.2s forwards;
}


/* Input */
input {
  border: none;
  outline: none;
  background: transparent;
  color: var(--nobackground);
  cursor: text;
  font-size: 1rem;
}

.campo {
  width: 200px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border: 1px solid var(--primary);
  border-radius: 10px;
  margin: 5px;
  padding: 10px;
}

/* Card */
.card {
  padding: 20px;
  border-radius: 10px;
  background: var(--background);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  color: var(--nobackground);
  box-shadow: 0 0 10px #0005;

  p, h1, h2 {
    color: var(--nobackground);
  }
}

.card-element {
  svg {
    width: 30px;
    cursor: pointer;

    path {
      cursor: pointer;
    }
  }
  fill: var(--primary);
}

.card-element svg:hover {
  fill: var(--nobackground);
}

.inputBox {
  width: 200px;
  display: flex;
  align-items: center;
  justify-content: space-around;
  border: 1px solid var(--primary);
  border-radius: 10px;
  
  input {
    position: relative;
    color: var(--primary);
    margin-right: auto;
    padding: 10px;
    border-radius: 10px 0 0 10px;
    border: none;
    outline: none;
    background: none;
    cursor: text;
    font-size: 1.2rem;
    width: 170px;
  }
}

/* Header */
nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  background: var(--background);
  color: var(--nobackground);
  box-shadow: 3px 3px 5px rgba(0, 0, 0, .1);
  z-index: 1;
}

nav ul {
  width: 100%;
  list-style: none;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

nav li {
  height: 70px;
}

nav a {
  height: 100%;
  padding: 0 30px;
  text-decoration: none;
  display: flex;
  align-items: center;
  color: var(--nobackground);
  cursor: pointer;
}

nav a svg {
  fill: var(--nobackground);
}

nav a:hover {
  background: var(--background);
  color: var(--nobackground);
}

nav a:hover > svg {
  cursor: pointer;
  path {
    cursor: pointer;
  }
}

nav li:first-child {
  position: relative;
  margin-right: auto;
  font-size: 1.3rem;
  letter-spacing: 3px;
}

nav li:last-child {
  display: none;
}

.sidebar {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  width: 250px;
  z-index: 999;
  background: var(--backgroundTransparent);
  backdrop-filter: blur(10px);
  box-shadow: -10px 0 10px rgba(0, 0, 0, .1);
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
}

.sidebar li {
  width: 100%;
}

.sidebar li:first-child {
  width: 100%;
  height: 250px;
  background: var(--secondTransparent);
  padding: 20px;
  backdrop-filter: blur(10px);
  display: grid;
  align-items: center;
  justify-content: center;

  svg {
    fill: var(--black2);
    width: 70px;
  }

  p, h1 {
    color: var(--red);
  }
}

.sidebar a {
  width: 100%;
}

@media(max-width: 800px) {

  nav li:last-child {
    display: block;
  }

  .hideOnMobile {
    display: none;
  }
}

@media(max-width: 400px) {
  .sidebar {
    width: 100%;
  }
}

.bodySider {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100vw - 250px);
  height: 100vh;
  cursor: pointer;
  background: #0001;
  backdrop-filter: blur(5px);
  z-index: 999;
}

/* Show Message */
.showMessageBox {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1000;
  background: var(--primaryTransparent);
}

.dialogBox {
  width: 80vw;
  max-width: 300px;
  min-height: 100px;
  max-height: 200px;
  background: var(--white);
  border-radius: 10px;
  padding: 10px;
  box-shadow: 0 0 5px #0003, 0 0 10px #0003, 2px 2px 5px #0002;

  h1 {
    font-size: 1.5rem;
    margin: 5px 0 10px;
  }

  p {
    font-size: .9rem;
  }

  .inputBox {
    background: var(--second);
    border: 2px dashed var(--black);
    margin: 10px 0;
    border-radius: 10px;
    justify-content: space-evenly;

    svg {
      cursor: pointer;

      path {
        cursor: pointer;
      }
    }
  }

  input {
    width: 100%;
    padding: 10px;
    border: none;
    outline: none;
    background: none;
    backdrop-filter: none;
    height: 10px;
    font-size: 1.2rem;
    cursor: text;
  }
}


/* Loading */
.loadingBox {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    display: grid;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    background: var(--primaryTransparent);
}
.wheel-and-hamster {
    --dur: 1s;
    position: relative;
    width: 12em;
    height: 12em;
    font-size: 14px;
  }
  
  .wheel,
  .hamster,
  .hamster div,
  .spoke {
    position: absolute;
  }
  
  .wheel,
  .spoke {
    border-radius: 50%;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
  
  .wheel {
    background: radial-gradient(100% 100% at center,hsla(0,0%,60%,0) 47.8%,hsl(0,0%,60%) 48%);
    z-index: 2;
}
  
  .hamster {
    animation: hamster var(--dur) ease-in-out infinite;
    top: 50%;
    left: calc(50% - 3.5em);
    width: 7em;
    height: 3.75em;
    transform: rotate(4deg) translate(-0.8em,1.85em);
    transform-origin: 50% 0;
    z-index: 1;
}
  
  .hamster__head {
    animation: hamsterHead var(--dur) ease-in-out infinite;
    background: hsl(30,90%,55%);
    border-radius: 70% 30% 0 100% / 40% 25% 25% 60%;
    box-shadow: 0 -0.25em 0 hsl(30,90%,80%) inset,
          0.75em -1.55em 0 hsl(30,90%,90%) inset;
    top: 0;
    left: -2em;
    width: 2.75em;
    height: 2.5em;
    transform-origin: 100% 50%;
}
  
  .hamster__ear {
    animation: hamsterEar var(--dur) ease-in-out infinite;
    background: hsl(0,90%,85%);
    border-radius: 50%;
    box-shadow: -0.25em 0 hsl(30,90%,55%) inset;
    top: -0.25em;
    right: -0.25em;
    width: 0.75em;
    height: 0.75em;
    transform-origin: 50% 75%;
}
  
  .hamster__eye {
    animation: hamsterEye var(--dur) linear infinite;
    background-color: hsl(0,0%,0%);
    border-radius: 50%;
    top: 0.375em;
    left: 1.25em;
    width: 0.5em;
    height: 0.5em;
}
  
  .hamster__nose {
    background: hsl(0,90%,75%);
    border-radius: 35% 65% 85% 15% / 70% 50% 50% 30%;
    top: 0.75em;
    left: 0;
    width: 0.2em;
    height: 0.25em;
}
  
  .hamster__body {
    animation: hamsterBody var(--dur) ease-in-out infinite;
    background: hsl(30,90%,90%);
    border-radius: 50% 30% 50% 30% / 15% 60% 40% 40%;
    box-shadow: 0.1em 0.75em 0 hsl(30,90%,55%) inset,
          0.15em -0.5em 0 hsl(30,90%,80%) inset;
    top: 0.25em;
    left: 2em;
    width: 4.5em;
    height: 3em;
    transform-origin: 17% 50%;
    transform-style: preserve-3d;
}
  
  .hamster__limb--fr,
  .hamster__limb--fl {
    clip-path: polygon(0 0,100% 0,70% 80%,60% 100%,0% 100%,40% 80%);
    top: 2em;
    left: 0.5em;
    width: 1em;
    height: 1.5em;
    transform-origin: 50% 0;
}
  
  .hamster__limb--fr {
    animation: hamsterFRLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,80%) 80%,hsl(0,90%,75%) 80%);
    transform: rotate(15deg) translateZ(-1px);
}
  
  .hamster__limb--fl {
    animation: hamsterFLLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,90%) 80%,hsl(0,90%,85%) 80%);
    transform: rotate(15deg);
}
  
  .hamster__limb--br,
  .hamster__limb--bl {
    border-radius: 0.75em 0.75em 0 0;
    clip-path: polygon(0 0,100% 0,100% 30%,70% 90%,70% 100%,30% 100%,40% 90%,0% 30%);
    top: 1em;
    left: 2.8em;
    width: 1.5em;
    height: 2.5em;
    transform-origin: 50% 30%;
}
  
  .hamster__limb--br {
    animation: hamsterBRLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,80%) 90%,hsl(0,90%,75%) 90%);
    transform: rotate(-25deg) translateZ(-1px);
}
  
  .hamster__limb--bl {
    animation: hamsterBLLimb var(--dur) linear infinite;
    background: linear-gradient(hsl(30,90%,90%) 90%,hsl(0,90%,85%) 90%);
    transform: rotate(-25deg);
}
  
  .hamster__tail {
    animation: hamsterTail var(--dur) linear infinite;
    background: hsl(0,90%,85%);
    border-radius: 0.25em 50% 50% 0.25em;
    box-shadow: 0 -0.2em 0 hsl(0,90%,75%) inset;
    top: 1.5em;
    right: -0.5em;
    width: 1em;
    height: 0.5em;
    transform: rotate(30deg) translateZ(-1px);
    transform-origin: 0.25em 0.25em;
}
  
  .spoke {
    animation: spoke var(--dur) linear infinite;
    background: radial-gradient(100% 100% at center,hsl(0,0%,60%) 4.8%,hsla(0,0%,60%,0) 5%),
          linear-gradient(hsla(0,0%,55%,0) 46.9%,hsl(0,0%,65%) 47% 52.9%,hsla(0,0%,65%,0) 53%) 50% 50% / 99% 99% no-repeat;
}
  
  /* Animations */
  @keyframes hamster {
    from, to {
      transform: rotate(4deg) translate(-0.8em,1.85em);
    }
  
    50% {
      transform: rotate(0) translate(-0.8em,1.85em);
    }
}
  
  @keyframes hamsterHead {
    from, 25%, 50%, 75%, to {
      transform: rotate(0);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(8deg);
    }
}
  
  @keyframes hamsterEye {
    from, 90%, to {
      transform: scaleY(1);
    }
  
    95% {
      transform: scaleY(0);
    }
}
  
  @keyframes hamsterEar {
    from, 25%, 50%, 75%, to {
      transform: rotate(0);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(12deg);
    }
}
  
  @keyframes hamsterBody {
    from, 25%, 50%, 75%, to {
      transform: rotate(0);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(-2deg);
    }
}
  
  @keyframes hamsterFRLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(50deg) translateZ(-1px);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(-30deg) translateZ(-1px);
    }
}
  
  @keyframes hamsterFLLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(-30deg);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(50deg);
    }
}
  
  @keyframes hamsterBRLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(-60deg) translateZ(-1px);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(20deg) translateZ(-1px);
    }
  }
  
  @keyframes hamsterBLLimb {
    from, 25%, 50%, 75%, to {
      transform: rotate(20deg);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(-60deg);
    }
}
  
  @keyframes hamsterTail {
    from, 25%, 50%, 75%, to {
      transform: rotate(30deg) translateZ(-1px);
    }
  
    12.5%, 37.5%, 62.5%, 87.5% {
      transform: rotate(10deg) translateZ(-1px);
    }
}
  
  @keyframes spoke {
    from {
      transform: rotate(0);
    }
  
    to {
      transform: rotate(-1turn);
    }
}


/* Global */
.center {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}
.centerTop {
  padding: 75px 0 !important;
  display: flex !important;
  align-items: top !important;
  justify-content: center !important;
}
.leftTop {
  position: absolute !important;
  left: 5px !important;
  top: 75px !important;
}
.rightTop {
  position: absolute !important;
  right: 5px !important;
  top: 75px !important;
}
.leftBottom {
  position: absolute !important;
  left: 5px !important;
  Bottom: 5px !important;
}
.rightBottom {
  position: absolute !important;
  right: 5px !important;
  bottom: 5px !important;
}
.hidden {
  display: none !important;
}
.grid {
  display: grid;
  align-items: center;
  justify-content: center;
  text-align: center;
}
.disabled {
  cursor: not-allowed !important;
  opacity: .7 !important;

  svg {
    cursor: not-allowed !important;
  }

  path {
    cursor: not-allowed !important;
  }
}